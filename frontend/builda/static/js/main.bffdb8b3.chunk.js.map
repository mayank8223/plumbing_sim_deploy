{"version":3,"sources":["logo.svg","colors.js","config/index.js","WebSocket.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colors","WebSocketService","callbacks","this","socketRef","instance","path","config","WebSocket","onmessage","e","console","log","socketNewMessage","data","onopen","onerror","message","onclose","connect","parsedData","JSON","parse","command","Object","keys","length","game_id","sendMessage","i","j","direction","pipe_size","initial_pressure","gameCallback","send","stringify","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","LoginComponent","props","gameIdChangeHandler","event","setState","target","value","state","className","onSubmit","handleLogin","type","onChange","placeholder","required","React","Component","Block","style","background","color","onClick","onContextMenu","pressure","Grid","handleContextMenu","grid","x","y","n","row","push","renderBlock","renderRow","size","renderGrid","Direction","text","Blank","Controls","renderBlank","renderDirection","Reset","SelectPipe","handleChange","selectedOption","handleOptionChange","checked","ChangeInitialPressure","bind","handlePressureChange","App","preventDefault","initUser","addCallbacks","gameUpdate","handleSizeChange","handleDeletePipe","Array","fill","prow","col","loggedIn","menuX","menuY","visible","currBlockX","currBlockY","self","document","addEventListener","component","directionClick","blockClick","reset","split","clientX","clientY","deletePipe","changeSize","val","Number","isInteger","changePressure","alert","handleBlockClick","handleDirectionClick","handleReset","position","top","left","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"qJAAAA,EAAOC,QAAU,IAA0B,kC,qICAvCC,G,YAAS,IACbA,EAAM,MAAY,QAClBA,EAAM,OAAa,OACnBA,EAAM,KAAW,MACjBA,EAAM,MAAY,QAEHA,Q,OCHA,EAFE,iDCCXC,E,WAWF,aAAc,yBATjBC,UAAY,GAULC,KAAKC,UAAY,K,+DAJjB,OAHKH,EAAiBI,WAClBJ,EAAiBI,SAAW,IAAIJ,GAE7BA,EAAiBI,a,+CAOlB,IAAD,OACCC,EAAOC,EACbJ,KAAKC,UAAY,IAAII,UAAUF,GAE/BH,KAAKC,UAAUK,UAAY,SAAAC,GAC1BC,QAAQC,IAAI,YACT,EAAKC,iBAAiBH,EAAEI,OAG5BX,KAAKC,UAAUW,OAAS,WACpBJ,QAAQC,IAAI,mBAGhBT,KAAKC,UAAUY,QAAU,SAAAN,GACrBC,QAAQC,IAAIF,EAAEO,UAGlBd,KAAKC,UAAUc,QAAU,WACrBP,QAAQC,IAAI,kCACZ,EAAKO,a,uCAIIL,GACb,IAAMM,EAAaC,KAAKC,MAAMR,GACxBS,EAAUH,EAAWG,QACe,IAAvCC,OAAOC,KAAKtB,KAAKD,WAAWwB,SAGhB,SAAZH,IACFZ,QAAQC,IAAI,iBACTT,KAAKD,UAAUqB,GAASH,IAEb,gBAAZG,IACCZ,QAAQC,IAAI,2BACZT,KAAKD,UAAUqB,GAASH,EAAWH,a,+BAIlCU,GACRxB,KAAKyB,YAAY,CAACL,QAAU,OAAQI,QAAUA,M,4BAGzCA,GACLxB,KAAKyB,YAAY,CAACL,QAAS,QAASI,QAASA,M,iCAGnCA,EAAQE,EAAEC,GACpB3B,KAAKyB,YAAY,CAACL,QAAS,cAAeI,QAASA,EAASE,EAAEA,EAAGC,EAAEA,M,qCAGrDH,EAAQI,EAAUC,GAChC7B,KAAKyB,YAAY,CAACL,QAAS,kBAAmBI,QAASA,EAASI,UAAUA,EAAWC,UAAWA,M,iCAEtFL,EAAQE,EAAEC,EAAEE,GACnB7B,KAAKyB,YAAY,CAACL,QAAS,cAAeI,QAASA,EAASE,EAAEA,EAAGC,EAAEA,EAAGE,UAAUA,M,iCAEzEL,EAAQE,EAAEC,GACjB3B,KAAKyB,YAAY,CAACL,QAAS,cAAeI,QAASA,EAASE,EAAEA,EAAGC,EAAEA,M,qCAExDH,EAAQM,GACnB9B,KAAKyB,YAAY,CAACL,QAAS,uBAAwBI,QAASA,EAASM,iBAAkBA,M,mCAE9EC,GACT/B,KAAKD,UAAL,KAAyBgC,I,kCAGjBpB,GACR,IACCH,QAAQC,IAAI,SACTD,QAAQC,IAAR,eAAgBE,IAChBX,KAAKC,UAAU+B,KAAKd,KAAKe,UAAL,eAAmBtB,KAE3C,MAAMuB,GACF1B,QAAQC,IAAIyB,EAAIpB,Y,8BAIpB,OAAOd,KAAKC,UAAUkC,a,8CAIFC,GACpB,IAAMC,EAASrC,KAAKC,UACdqC,EAAYtC,KAAKuC,wBACvBC,YACI,WACI,GAAyB,IAAtBH,EAAOF,WAKN,OAJA3B,QAAQC,IAAI,2BACG,MAAZ2B,GACCA,KAKJ5B,QAAQC,IAAI,yBACZ6B,EAAUF,KAEf,O,KAjHTtC,EACEI,SAAW,KAqHnB,IAEeuC,EAFS3C,EAAiB4C,cClHnCC,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAORC,oBAAsB,SAACC,GAErB,EAAKC,SAAS,CACZvB,QAASsB,EAAME,OAAOC,SATxB,EAAKC,MAAQ,CACX1B,QAAU,IAHK,E,qDAeT,IAAD,OACP,OACE,yBAAK2B,UAAU,SACb,0BAAMC,SAAU,SAAC7C,GAAD,OAAO,EAAKqC,MAAMS,YAAY9C,EAAG,EAAK2C,MAAM1B,WAC1D,2BACE8B,KAAK,OACLC,SAAYvD,KAAK6C,oBACjBI,MAASjD,KAAKkD,MAAM1B,QACpBgC,YAAc,UACdC,UAAQ,IAEV,4BAAQN,UAAU,SAASG,KAAK,UAAhC,kB,GA5BmBI,IAAMC,WA2F7BC,GApDsBF,IAAMC,U,uKAsDhC,OACE,4BAAQR,UAAU,SAASU,MAAO,CAACC,WAAW9D,KAAK4C,MAAMmB,OAAQC,QAAShE,KAAK4C,MAAMoB,QAASC,cAAejE,KAAK4C,MAAMqB,eACvHjE,KAAK4C,MAAMsB,c,GAJIR,IAAMC,YAUpBQ,E,4MAgBJC,kBAAoB,SAAC7D,EAAEmB,EAAEC,GACvB,EAAKiB,MAAMwB,kBAAkB7D,EAAEmB,EAAEC,I,0DAfvBD,EAAEC,GAAG,IAAD,OAEVoC,EAAQlE,EAAOG,KAAK4C,MAAMyB,KAAK3C,GAAGC,IAClCuC,EAAWlE,KAAK4C,MAAMsB,SAASxC,GAAGC,GACtC,OAAO,kBAAC,EAAD,CACL2C,EAAG5C,EACH6C,EAAG5C,EACHoC,MAAOA,EACPC,QAAS,kBAAM,EAAKpB,MAAMoB,QAAQtC,EAAEC,IACpCsC,cAAe,SAAC1D,GAAD,OAAO,EAAK6D,kBAAkB7D,EAAEmB,EAAEC,IACjDuC,SAAYA,M,gCAQNxC,EAAE8C,GAEV,IADA,IAAIC,EAAM,GACF9C,EAAI,EAAGA,EAAE6C,EAAG7C,IAClB8C,EAAIC,KAAK1E,KAAK2E,YAAYjD,EAAEC,IAE9B,OAAO8C,I,iCAGED,GAET,IADA,IAAIH,EAAO,GACH3C,EAAE,EAAGA,EAAE8C,EAAG9C,IAChB2C,EAAKK,KAAK,yBAAKvB,UAAU,aAAanD,KAAK4E,UAAUlD,EAAE8C,KAEzD,OAAOH,I,+BAIP,IAAMG,EAAIxE,KAAK4C,MAAMiC,KACrB,OACE,6BACG7E,KAAK8E,WAAWN,Q,GAxCNd,IAAMC,WA8CzB,SAASoB,EAAUnC,GACjB,OACE,4BAAQO,UAAU,YAAYa,QAASpB,EAAMoB,SAC1CpB,EAAMoC,MAKb,SAASC,EAAMrC,GACb,OACE,4BAAQO,UAAU,U,IAOhB+B,E,8KAEYF,GAAM,IAAD,OACnB,OAAO,kBAACD,EAAD,CACLC,KAAMA,EACNhB,QAAS,kBAAM,EAAKpB,MAAMoB,QAAQgB,Q,oCAIpC,OAAO,kBAACC,EAAD,Q,+BAIP,OACE,6BACE,yBAAK9B,UAAU,aACZnD,KAAKmF,cACLnF,KAAKoF,gBAAgB,KACrBpF,KAAKmF,eAER,yBAAKhC,UAAU,aACZnD,KAAKoF,gBAAgB,KACrBpF,KAAKmF,cACLnF,KAAKoF,gBAAgB,MAExB,yBAAKjC,UAAU,aACZnD,KAAKmF,cACLnF,KAAKoF,gBAAgB,KACrBpF,KAAKmF,oB,GA5BOzB,IAAMC,WAmC7B,SAAS0B,EAAMzC,GACb,OACE,4BAAQO,UAAU,QAAQa,QAASpB,EAAMoB,SAAzC,S,IAMEsB,E,kDACL,WAAY1C,GAAQ,IAAD,8BAClB,cAAMA,IAMP2C,aAAe,SAAChF,GACf,EAAKwC,SAAS,CACbyC,eAAgBjF,EAAEyC,OAAOC,QAE1B,EAAKL,MAAM6C,mBAAmBlF,IAT9B,EAAK2C,MAAQ,CACZsC,eAAgB,SAHC,E,qDAgBlB,OACA,8BACC,2BAAOlC,KAAK,QAAQL,MAAM,QAAQyC,QAAsC,SAA3B1F,KAAKkD,MAAMsC,eAAyBjC,SAAYvD,KAAKuF,eADnG,WAIC,2BAAOjC,KAAK,QAAQL,MAAM,SAASyC,QAAsC,UAA3B1F,KAAKkD,MAAMsC,eAA0BjC,SAAYvD,KAAKuF,eAJrG,YAOC,2BAAOjC,KAAK,QAAQL,MAAM,QAAQyC,QAAsC,SAA3B1F,KAAKkD,MAAMsC,eAAyBjC,SAAYvD,KAAKuF,eAPnG,c,GAlBuB7B,IAAMC,WAiCzBgC,E,kDAEJ,WAAY/C,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXpB,iBAAkB,IAEpB,EAAKyD,aAAe,EAAKA,aAAaK,KAAlB,gBALH,E,yDAQNrF,GACXP,KAAK+C,SAAS,CACZjB,iBAAkBvB,EAAEyC,OAAOC,U,+BAIrB,IAAD,OACP,OACE,0BAAMG,SAAU,SAAC7C,GAAD,OAAO,EAAKqC,MAAMiD,qBAAqBtF,EAAE,EAAK2C,MAAMpB,oBAApE,yBAEE,2BAAOwB,KAAK,OAAOC,SAAYvD,KAAKuF,eACpC,4BAAQpC,UAAU,SAASG,KAAK,UAAhC,oB,GArB4BI,IAAMC,WAoP3BmC,E,kDArNb,WAAYlD,GAAQ,IAAD,uBACjB,cAAMA,IA0ERS,YAAc,SAAC9C,EAAEiB,GACfjB,EAAEwF,iBACF,EAAKhD,SAAS,CAEZvB,QAASA,IAGXiB,EAAkBzB,UAClB,EAAKuB,yBAAwB,WAC3BE,EAAkBuD,SAASxE,GAC3BiB,EAAkBwD,aAAa,EAAKC,WAAWN,KAAhB,qBArFhB,EAyFnBH,mBAAqB,SAAC3C,GAErBtC,QAAQC,IAAIqC,EAAME,OAAOC,OACzB,EAAKF,SAAS,CACblB,UAAWiB,EAAME,OAAOC,SA3FxB,EAAKmB,kBAAoB,EAAKA,kBAAkBwB,KAAvB,gBACzB,EAAKO,iBAAmB,EAAKA,iBAAiBP,KAAtB,gBACxB,EAAKQ,iBAAmB,EAAKA,iBAAiBR,KAAtB,gBACxB,EAAKC,qBAAuB,EAAKA,qBAAqBD,KAA1B,gBAM5B,IALA,IACIvB,EAAO,GAGPH,EAAW,GACPxC,EAAE,EAAEA,EALD,GAKQA,IAAI,CACrB,IAAI+C,EAAM4B,MAND,IAMaC,KAAK,SACvBC,EAAOF,MAPF,IAOcC,KAAK,IAC5BpC,EAASQ,KAAK6B,GACdlC,EAAKK,KAAKD,GAfK,OAiBjBP,EATUW,IACA,GAQW,KACrBR,EAVUQ,IACA,GASO,SACjB,EAAK3B,MAAQ,CACX2B,KAdS,GAeTR,KAAMA,EACNI,IAdQI,GAeR2B,IAdQ,EAeRhF,QAAS,GACTiF,UAAU,EACV5E,UAAW,QACX6E,MAAO,QACPC,MAAO,QACPC,SAAS,EACTC,WAAY,EACZC,WAAY,EACZ5C,SAAUA,EACVpC,iBAAkB,MAjCH,E,gEAsCjB,IAAIiF,EAAO/G,KACXgH,SAASC,iBAAiB,SAAS,SAASnE,GAC1CiE,EAAKhE,SAAS,CAAC6D,SAAS,S,8CAGFxE,GACpB,IAAM8E,EAAYlH,KAClBwC,YACI,WACI,GAAiC,IAA9BC,EAAkBS,QAGjB,OAFA1C,QAAQC,IAAI,2BACZ2B,IAIA5B,QAAQC,IAAI,4BACZyG,EAAU3E,wBAAwBH,KAEvC,O,2CAGQR,GACnB,IAAIJ,EAAUxB,KAAKkD,MAAM1B,QACrBK,EAAY7B,KAAKkD,MAAMrB,UAC3BY,EAAkB0E,eAAe3F,EAAQI,EAAUC,K,uCAGpCH,EAAEC,GACjB,IAAIH,EAAUxB,KAAKkD,MAAM1B,QACzBiB,EAAkB2E,WAAW5F,EAAQE,EAAEC,K,oCAIvCnB,QAAQC,IAAI,SACZgC,EAAkB4E,MAAMrH,KAAKkD,MAAM1B,W,iCAyB1BP,GACTT,QAAQC,IAAI,UACZ,IAAM4D,EAAOpD,EAAU,KACjBwD,EAAMxD,EAAU,IAChBuF,EAAMvF,EAAU,IAEhBiD,GADOjD,EAAU,KACNA,EAAU,UACrBa,EAAmBb,EAAU,iBACnCjB,KAAK+C,SAAS,CACb0D,UAAU,EACTpC,KAAMA,EACNI,IAAKA,EACL+B,IAAKA,EACLtC,SAAUA,EACVpC,iBAAkBA,M,wCAKJvB,EAAEmB,EAAEC,GAES,QADhB3B,KAAKkD,MAAMmB,KAChB3C,GAAGC,GAAG2F,MAAM,KAAK,KACvB/G,EAAEwF,iBACFvF,QAAQC,IAAIF,EAAEgH,QAAQhH,EAAEiH,SACxBhH,QAAQC,IAAIiB,EAAEC,GACd3B,KAAK+C,SAAS,CACZ2D,MAAOnG,EAAEgH,QACTZ,MAAOpG,EAAEiH,QACTZ,SAAS,EACTC,WAAYnF,EACZoF,WAAYnF,O,uCAKDpB,GACf,IAAIiB,EAAUxB,KAAKkD,MAAM1B,QACrBE,EAAI1B,KAAKkD,MAAM2D,WACflF,EAAI3B,KAAKkD,MAAM4D,WACnBrE,EAAkBgF,WAAWjG,EAAQE,EAAEC,K,uCAGxBmB,GACf,IAAI+B,EAAO/B,EAAME,OAAOC,MACpBzB,EAAUxB,KAAKkD,MAAM1B,QACrBE,EAAI1B,KAAKkD,MAAM2D,WACflF,EAAI3B,KAAKkD,MAAM4D,WACnBrE,EAAkBiF,WAAWlG,EAAQE,EAAEC,EAAEkD,K,2CAGtB/B,EAAM6E,GACzB7E,EAAMiD,iBACN,IAAIvE,EAAUxB,KAAKkD,MAAM1B,QACrBM,GAAoB6F,EACrBC,OAAOC,UAAU/F,IAAmBA,EAAiB,EACtDW,EAAkBqF,eAAetG,EAAQM,GAGzCiG,MAAM,8B,+BAIA,IAAD,OACDlD,EAAO7E,KAAKkD,MAAM2B,KAClBR,EAAOrE,KAAKkD,MAAMmB,KAClBoC,EAAWzG,KAAKkD,MAAMuD,SACtBvC,EAAWlE,KAAKkD,MAAMgB,SAC5B,OACGuC,EACD,6BACE,kBAAC,EAAD,CACE5B,KAAMA,EACNR,KAAMA,EACNL,QAAW,SAACtC,EAAEC,GAAH,OAAS,EAAKqG,iBAAiBtG,EAAEC,IAC5CyC,kBAAqBpE,KAAKoE,kBAC1BF,SAAYA,IAEd,kBAAC,EAAD,CACEF,QAAW,SAACpC,GAAD,OAAe,EAAKqG,qBAAqBrG,MAEtD,kBAAC,EAAD,CACC6D,mBAAsBzF,KAAKyF,mBAC3BD,eAAkBxF,KAAKkD,MAAMrB,YAE9B,kBAAC,EAAD,CACEgE,qBAAwB7F,KAAK6F,uBAC/B,kBAACR,EAAD,CACErB,QAAW,kBAAM,EAAKkE,iBAEvBlI,KAAKkD,MAAM0D,SACV,yBAAK/C,MAAO,CAACsE,SAAS,WAAYC,IAAIpI,KAAKkD,MAAMyD,MAAO0B,KAAKrI,KAAKkD,MAAMwD,QAEtE,4BAAQ1C,QAAShE,KAAKoG,iBAAkBnD,MAAM,OAA9C,eAGA,4BAAQe,QAAShE,KAAKmG,iBAAkBlD,MAAM,SAA9C,oBAGA,4BAAQe,QAAShE,KAAKmG,iBAAkBlD,MAAM,UAA9C,uBAGA,4BAAQe,QAAShE,KAAKmG,iBAAkBlD,MAAM,SAA9C,wBASN,kBAAC,EAAD,CACEI,YAAerD,KAAKqD,kB,GAlNVK,IAAMC,WCvQJ2E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF7B,SAAS8B,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9I,QAAQ8I,MAAMA,EAAMxI,c","file":"static/js/main.bffdb8b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","let Colors = []\nColors[\"blank\"] = \"white\"\nColors[\"active\"] = \"blue\"\nColors[\"pipe\"] = \"red\"\nColors[\"split\"] = \"black\"\n\nexport default Colors;","\nconst API_PATH = 'wss://secure-garden-92806.herokuapp.com/ws/sim'\n\nexport default {\n    API_PATH\n};","import config from './config';\n\nclass WebSocketService{\n\tstatic instance = null;\n\tcallbacks = {};\n\n\tstatic getInstance(){\n        if (!WebSocketService.instance){\n            WebSocketService.instance = new WebSocketService();\n        }\n        return WebSocketService.instance;\n    }\n\n    constructor(){\n        this.socketRef = null;\n    }\n\n    connect(){\n        const path = config.API_PATH;\n        this.socketRef = new WebSocket(path);\n        \n        this.socketRef.onmessage = e => {\n        \tconsole.log('Received')\n            this.socketNewMessage(e.data);\n          };\n\n        this.socketRef.onopen = () => {\n            console.log(\"WebSocket open\");\n        };\n        \n        this.socketRef.onerror = e => {\n            console.log(e.message);\n        };\n\n        this.socketRef.onclose = () => {\n            console.log(\"WebSocket closed, restarting..\");\n            this.connect();\n        };   \n    }\n\n    socketNewMessage(data){\n        const parsedData = JSON.parse(data);\n        const command = parsedData.command;\n        if(Object.keys(this.callbacks).length === 0){\n            return;\n        }\n        if(command === 'game'){\n        \tconsole.log('game received')\n            this.callbacks[command](parsedData);\n        }\n        if(command === 'new_message'){\n            console.log(\"okay so this was called\")\n            this.callbacks[command](parsedData.message);\n        }\n    }\n\n    initUser(game_id){\n    \tthis.sendMessage({command : 'init', game_id : game_id})\n    }\n\n    reset(game_id){\n    \tthis.sendMessage({command: 'reset', game_id: game_id})\n    }\n\n    blockClick(game_id,i,j){\n    \tthis.sendMessage({command: 'block_click', game_id: game_id, i:i, j:j})\n    }\n\n    directionClick(game_id,direction,pipe_size){\n    \tthis.sendMessage({command: 'direction_click', game_id: game_id, direction:direction, pipe_size: pipe_size })\n    }\n    changeSize(game_id,i,j,pipe_size){\n        this.sendMessage({command: 'change_size', game_id: game_id, i:i, j:j, pipe_size:pipe_size})\n    }\n    deletePipe(game_id,i,j){\n        this.sendMessage({command: 'delete_pipe', game_id: game_id, i:i, j:j})\n    }\n    changePressure(game_id,initial_pressure){\n        this.sendMessage({command: 'change_init_pressure', game_id: game_id, initial_pressure: initial_pressure})\n    }\n    addCallbacks(gameCallback){\n        this.callbacks['game'] = gameCallback;\n    }\n\n    sendMessage(data){\n        try{\n        \tconsole.log('tried');\n            console.log({...data})\n            this.socketRef.send(JSON.stringify({...data}))\n        }\n        catch(err){\n            console.log(err.message);\n        }\n    }\n     state(){\n        return this.socketRef.readyState;\n    }\n\n\n    waitForSocketConnection(callback){\n        const socket = this.socketRef;\n        const recursion = this.waitForSocketConnection;\n        setTimeout(\n            function(){\n                if(socket.readyState === 1){\n                    console.log(\"Connection is made\");\n                    if(callback != null){\n                        callback();\n                    }\n                    return;\n                }\n                else{\n                    console.log(\"Wait for connection..\");\n                    recursion(callback);\n                }\n            }, 1);\n    }\n\n}\n\nlet WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Colors from './colors';\nimport WebSocketInstance from './WebSocket';\n\nclass LoginComponent extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      game_id : ''\n    }\n\n  }\n\n  gameIdChangeHandler = (event) => {\n    //console.log(window.location.origin.replace(/^http/,'ws')+'/ws/sim')\n    this.setState({\n      game_id: event.target.value\n    });\n  }\n\n  render() {\n    return(\n      <div className=\"login\">\n        <form onSubmit={(e) => this.props.handleLogin(e, this.state.game_id)}>\n          <input \n            type=\"text\"\n            onChange = {this.gameIdChangeHandler}\n            value = {this.state.game_id}\n            placeholder = \"Game Id\"\n            required \n          />\n          <button className=\"submit\" type=\"submit\">\n            Let's Go\n          </button>\n        </form>\n      </div>\n    );\n  }\n\n\n}\n\nclass CustomContext extends React.Component{\n constructor(props) {\n super(props);\n \n this.state={\n visible: false,\n x: 0,\n y: 0\n };\n }\n \n componentDidMount(){\n var self=this;\n document.addEventListener('contextmenu', function(event){\n event.preventDefault();\n const clickX = event.clientX;\n const clickY = event.clientY;\n self.setState({ visible: true, x: clickX, y: clickY });\n \n });\n document.addEventListener('click', function(event){\n event.preventDefault();\n self.setState({ visible: false, x:0, y:0});\n \n });\n }\n \n returnMenu(items){\n var myStyle = {\n 'position': 'absolute',\n 'top': `${this.state.y}px`,\n 'left':`${this.state.x+5}px`\n }\n \n return <div className='custom-context' id='text' style={myStyle}>\n {items.map((item, index, arr) =>{\n if(arr.length-1==index){\n return <div key={index} className='custom-context-item-last'>{item.label}</div>\n }else{\n return <div key={index} className='custom-context-item'>{item.label}</div>\n }\n })}\n </div>;\n }\n   render() {\n    return  (<div id='cmenu'>\n        {this.state.visible ? this.returnMenu(this.props.items): null}\n    </div>\n    )\n  }\n}\n\nclass Block extends React.Component{\n  render(){\n  return (\n    <button className=\"square\" style={{background:this.props.color}} onClick={this.props.onClick} onContextMenu={this.props.onContextMenu}>\n    {this.props.pressure}\n    </button>\n  )\n  }\n}\n\nclass Grid extends React.Component{\n\n  renderBlock(i,j){\n  \t//console.log(this.props.grid[i][j])\n    let color = Colors[this.props.grid[i][j]]\n    let pressure = this.props.pressure[i][j];\n    return <Block\n      x={i}\n      y={j}\n      color={color}\n      onClick={() => this.props.onClick(i,j)}\n      onContextMenu={(e) => this.handleContextMenu(e,i,j)}\n      pressure = {pressure}\n    />\n  }\n\n  handleContextMenu = (e,i,j) => {\n    this.props.handleContextMenu(e,i,j)\n  }\n\n  renderRow(i,n){\n    let row = []\n    for(let j = 0; j<n; j++){\n      row.push(this.renderBlock(i,j));\n    }\n    return row;\n  }\n\n  renderGrid(n){\n    let grid = []\n    for(let i=0; i<n; i++){\n      grid.push(<div className=\"board-row\">{this.renderRow(i,n)}</div>);\n    }\n    return grid;\n  }\n\n  render(){\n    const n = this.props.size;\n    return(\n      <div>\n        {this.renderGrid(n)}\n      </div>\n    )\n  }\n}\n\nfunction Direction(props){\n  return(\n    <button className=\"direction\" onClick={props.onClick}>\n      {props.text}\n    </button>\n  )\n}\n\nfunction Blank(props){\n  return(\n    <button className=\"blank\">\n    </button>\n  )\n}\n\n\n\nclass Controls extends React.Component{\n\n  renderDirection(text){\n    return <Direction\n      text={text}\n      onClick={() => this.props.onClick(text)}\n    />;\n  }\n  renderBlank(){\n    return <Blank />;\n  }\n\n  render() {\n    return(\n      <div>\n        <div className=\"board-row\">\n          {this.renderBlank()}\n          {this.renderDirection(\"U\")}\n          {this.renderBlank()}\n        </div>\n        <div className=\"board-row\">\n          {this.renderDirection(\"L\")}\n          {this.renderBlank()}\n          {this.renderDirection(\"R\")}\n        </div>\n        <div className=\"board-row\">\n          {this.renderBlank()}\n          {this.renderDirection(\"D\")}\n          {this.renderBlank()}\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction Reset(props){\n  return(\n    <button className=\"reset\" onClick={props.onClick}>\n      Reset\n    </button>\n  )\n}\n\nclass SelectPipe extends React.Component{\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tselectedOption: 'large'\n\t\t}\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\tselectedOption: e.target.value\n\t\t})\n\t\tthis.props.handleOptionChange(e);\n\t\t\n\t}\n\n\trender() {\n\t\treturn(\n\t\t<form>\n\t\t\t<input type=\"radio\" value=\"small\" checked = {this.state.selectedOption==\"small\"} onChange = {this.handleChange} />\n\t\t\t\t0.5 inch\n\t\t\t\n\t\t\t<input type=\"radio\" value=\"medium\" checked = {this.state.selectedOption==\"medium\"} onChange = {this.handleChange} />\n\t\t\t\t0.75 inch\n\t\t\n\t\t\t<input type=\"radio\" value=\"large\" checked = {this.state.selectedOption==\"large\"} onChange = {this.handleChange} />\n\t\t\t\t1 inch\n\t\t\t\n\t\t</form>\n\t\t)\n\t}\n}\n\nclass ChangeInitialPressure extends React.Component{\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      initial_pressure: ''\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(e) {\n    this.setState({\n      initial_pressure: e.target.value\n    });\n  }\n\n  render() {\n    return(\n      <form onSubmit={(e) => this.props.handlePressureChange(e,this.state.initial_pressure)}>\n        Enter initial pressure\n        <input type=\"text\" onChange = {this.handleChange} />        \n        <button className=\"submit\" type=\"submit\">\n        Make change\n        </button>\n      </form>\n    )\n  }\n}\n\nclass App extends React.Component{\n\n  constructor(props) {\n    super(props);\n    this.handleContextMenu = this.handleContextMenu.bind(this);\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.handleDeletePipe = this.handleDeletePipe.bind(this);\n    this.handlePressureChange = this.handlePressureChange.bind(this);\n    let size = 15\n    let grid = []\n    let row = size-1\n    let col = 0\n    let pressure = []\n    for(let i=0;i<size;i++){\n      let row = Array(size).fill(\"blank\")\n      let prow = Array(size).fill(\"\")\n      pressure.push(prow)\n      grid.push(row)\n    }\n    pressure[row][col] = \"60\"\n    grid[row][col] = \"active\"\n    this.state = {\n      size:size,\n      grid: grid,\n      row: row,\n      col: col,\n      game_id: '',\n      loggedIn: false,\n      pipe_size: 'large',\n      menuX: \"100px\",\n      menuY: \"100px\",\n      visible: false,\n      currBlockX: 0,\n      currBlockY: 0,\n      pressure: pressure,\n      initial_pressure: '60'\n    };\n   \n  }\n  componentDidMount(){\n    var self = this\n    document.addEventListener('click', function(event){\n      self.setState({visible: false});\n    });\n  }\n    waitForSocketConnection(callback) {\n        const component = this;\n        setTimeout(\n            function(){\n                if(WebSocketInstance.state() === 1){\n                    console.log('Connection is made');\n                    callback()\n                    return;\n                }\n                else{\n                    console.log(\"Waiting for connection..\");\n                    component.waitForSocketConnection(callback);\n                }\n            }, 100);\n    }\n\n  handleDirectionClick(direction) {\n    let game_id = this.state.game_id\n    let pipe_size = this.state.pipe_size\n    WebSocketInstance.directionClick(game_id,direction,pipe_size)\n  }\n\n  handleBlockClick(i,j){\n    let game_id = this.state.game_id\n    WebSocketInstance.blockClick(game_id,i,j)\n  }\n\n  handleReset(){\n    console.log(\"reset\")\n    WebSocketInstance.reset(this.state.game_id)\n  }\n\n  handleLogin = (e,game_id) => {\n    e.preventDefault();\n    this.setState({\n      //loggedIn: true,\n      game_id: game_id\n    })\n\n    WebSocketInstance.connect();\n    this.waitForSocketConnection(() => { \n      WebSocketInstance.initUser(game_id);\n      WebSocketInstance.addCallbacks(this.gameUpdate.bind(this))\n    });\n  }\n\n  handleOptionChange = (event) => {\n  \t//event.preventDefault();\n  \tconsole.log(event.target.value)\n  \tthis.setState({\n  \t\tpipe_size: event.target.value\n  \t})\n  }\n\n  gameUpdate(parsedData){\n    console.log('update')\n    const grid = parsedData['grid']\n    const row = parsedData['row']\n    const col = parsedData['col']\n    const size = parsedData['size']\n    const pressure = parsedData['pressure']\n    const initial_pressure = parsedData['initial_pressure']\n    this.setState({\n    \tloggedIn: true,\n      grid: grid,\n      row: row,\n      col: col,\n      pressure: pressure,\n      initial_pressure: initial_pressure\n    })\n    \n  }\n\n  handleContextMenu(e,i,j){\n    const grid = this.state.grid;\n    if(grid[i][j].split(\"_\")[0]==\"pipe\"){\n      e.preventDefault()\n      console.log(e.clientX,e.clientY)\n      console.log(i,j)\n      this.setState({\n        menuX: e.clientX,\n        menuY: e.clientY,\n        visible: true,\n        currBlockX: i,\n        currBlockY: j,\n      })\n    }\n  }\n\n  handleDeletePipe(e) {\n    let game_id = this.state.game_id\n    let i = this.state.currBlockX\n    let j = this.state.currBlockY\n    WebSocketInstance.deletePipe(game_id,i,j)\n  }\n\n  handleSizeChange(event) {\n    let size = event.target.value\n    let game_id = this.state.game_id\n    let i = this.state.currBlockX\n    let j = this.state.currBlockY\n    WebSocketInstance.changeSize(game_id,i,j,size);\n  }\n\n  handlePressureChange(event,val){\n    event.preventDefault()\n    let game_id = this.state.game_id\n    let initial_pressure = +val\n    if(Number.isInteger(initial_pressure)&&initial_pressure>0){\n      WebSocketInstance.changePressure(game_id,initial_pressure)\n    }\n    else{\n      alert('Enter a positive integer')\n    }\n  }\n\n  render() {\n    const size = this.state.size\n    const grid = this.state.grid\n    const loggedIn = this.state.loggedIn\n    const pressure = this.state.pressure\n    return(\n       loggedIn ?\n      <div>\n        <Grid \n          size={size}\n          grid={grid}\n          onClick = {(i,j) => this.handleBlockClick(i,j)}\n          handleContextMenu = {this.handleContextMenu}\n          pressure = {pressure}\n        />\n        <Controls\n          onClick = {(direction) => this.handleDirectionClick(direction)}\n        />\n        <SelectPipe\n        \thandleOptionChange = {this.handleOptionChange}\n        \tselectedOption = {this.state.pipe_size}\n        />\n        <ChangeInitialPressure \n          handlePressureChange = {this.handlePressureChange} />\n        <Reset\n          onClick = {() => this.handleReset()}\n        />\n        {this.state.visible &&\n          <div style={{position:\"absolute\", top:this.state.menuY, left:this.state.menuX}}>\n\n            <button onClick={this.handleDeletePipe} value=\"del\">\n            Delete pipe\n            </button>\n            <button onClick={this.handleSizeChange} value=\"large\">\n            Change to 1 inch\n            </button>\n            <button onClick={this.handleSizeChange} value=\"medium\">\n            Change to 0.75 inch\n            </button>\n            <button onClick={this.handleSizeChange} value=\"small\">\n            Change to 0.5 inch\n            </button>\n            </div>\n        }\n\n\n      </div>\n            :\n      <LoginComponent\n        handleLogin = {this.handleLogin} />\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}